main:
定义啰嗦模式标志（标志为true则显示详细信息）
定义安静模式标志（标志为true则不显示任何信息）
建立P2P连接P2PConnect
读入外置文件中的参数（节点数量、每个块的mn数量）
计算工作路径
调用OpenTheWeb


OpenTheWeb：
flag1置为true，标志可以上传mn
输入用户名（来自IDsvr或输入）
调用gerateGensisBlocks生成创世区块
打印创世区块
创建并发送自己的用户信息
开启协程HandlerMessage1模拟用户操作
for循环【
从消息缓冲池读一条消息
如果消息头包含id【
将消息反序列化为数据结构“用户”
【如果我是第一个用户且用户表为空则把我自己加进用户表
发出我的用户表】
【如果我是第一个用户且用户表不为空则把新用户加进用户表
发出我的用户表】
【如果我不是新用户且用户表不为空则加进用户表】
】
如果消息头包含mn【
将消息反序列化为数据结构“merkernode”
把mn加进我的待成块缓冲池
把文件加入待成块缓冲池
如果缓冲池中的mn数到达设定值，且我是本轮贡献值最大的用户【
生成新区快generateNewBlock
序列化新区快并发送】
】
如果消息头包含block11【
将消息反序列化为数据结构block
将block挂到自己的链上
清空我自己的mn和文件缓冲池
flag置为true
开一个协程calculateContribution计算贡献值 】
如果消息头包含DBcontent【
如果本地没有数据库则把收到的用户表附加进自己的用户表里】


calculateContribution：
定位最后一个区块
遍历该区块内的交易
如果是上传，增加该用户的文件表中的文件数
如果是交易，计算文件增值程度并归入用户表中各用户的文件数量
用反比例函数计算各用户的贡献值
找出本轮贡献值最大的用户写进maxCIndex
如果file表是空的就根据接收到的区块更新file表
如果发现针对某一文件进行了交易就更新文件表中该文件的记录
如果发现重复上传的文件就输出错误
如果接收到的区块的mn中有本地文件表中没有的文件就加入到本地文件表中
贡献值写入xlsx
将成块节点的贡献值归零

HandlerMessage1：
等待数秒（参数-起始等待时间）
等获取到用户名之后再开始模拟上链过程
生成随机数确定本次该节点是否操作
确定不同操作的节点范围
检查自己属于哪个范围以确定本次执行什么操作
【如果本次要上传则生成文件、生成mn
检查flag1标志确定是否能发送
发送mn】
【如果本次要交易则从文件表中随机找一个文件进行交易
随机产生一个交易价格
生成mn，检查能否发送、发送mn】
【如果既能上传又能交易则随机一种操作并执行上述上传或交易过程】
歇一会再重复本函数


gerateGensisBlocks：
初始化一个Block
调用generateMerkleNode对预置txt生成mn
实例化文件表中的文件项
给文件项初始内容赋值
把文件项挂上文件表
实例化BlockBody
把生成的mn挂上区块体
区块体挂上区块
创世区块挂上区块链
清空blockbody的切片


generateMerkleNode:
实例化mn并给username赋值
如果路径为空就采用传入的hash并用当前时间
否则采用SHA256File计算Hash并采用文件修改时间
利用传入价值给mn赋值并确定mn类型